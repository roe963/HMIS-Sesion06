package org.ual.hmis.ortega2;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class TeamWebSuiteTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    // Browser selector
    int browser = 0; // 0: firefox, 1: chrome,...

    @Before
    public void setUp() {
        Boolean headless = true;
        switch (browser) {
        case 0: // firefox
            // Firefox
            // Descargar geckodriver de https://github.com/mozilla/geckodriver/releases
            // Descomprimir el archivo geckodriver.exe en la carpeta drivers

            System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe");
            FirefoxOptions firefoxOptions = new FirefoxOptions();
            if (headless)
                firefoxOptions.setHeadless(headless);
            driver = new FirefoxDriver(firefoxOptions);

            break;
        case 1: // chrome
            // Chrome
            // Descargar Chromedriver de https://chromedriver.chromium.org/downloads
            // Descomprimir el archivo chromedriver.exe en la carpeta drivers

            System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
            ChromeOptions chromeOptions = new ChromeOptions();
            if (headless)
                chromeOptions.setHeadless(headless);
            chromeOptions.addArguments("window-size=1920,1080");
            driver = new ChromeDriver(chromeOptions);

            break;

        default:
            fail("Please select a browser");
            break;
        }
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        if (browser == 1)
            driver.quit();
    }

    @SuppressWarnings("deprecation")
    @Test
    public void testteampage() {
        // Test name: test team page
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("http://ortega2web.eastus.cloudapp.azure.com/");
        // 2 | pause | 1000 |
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        // 3 | assertTitle | HMIS2021-Ortega² |
        assertThat(driver.getTitle(), is("HMIS2021-Ortega²"));
        // 4 | click | css=.masthead-heading |
        driver.findElement(By.cssSelector(".masthead-heading")).click();
        // 5 | assertText | css=.masthead-heading | ORTEGA²
        assertThat(driver.findElement(By.cssSelector(".masthead-heading")).getText(), is("ORTEGA²"));
        // 6 | click | css=.nav-item:nth-child(2) > .nav-link |
        driver.findElement(By.cssSelector(".nav-item:nth-child(2) > .nav-link")).click();
        // 7 | assertText | css=#about .section-heading | ENLACES
        assertThat(driver.findElement(By.cssSelector("#about .section-heading")).getText(), is("ENLACES"));
        // 8 | assertText | css=li:nth-child(1) > .timeline-panel a |
        // https://github.com/joa102/hmis-sesion04
        assertThat(driver.findElement(By.cssSelector("li:nth-child(1) > .timeline-panel a")).getText(),
                is("https://github.com/joa102/hmis-sesion04"));
        // 9 | assertText | css=.timeline-inverted:nth-child(2) a |
        // https://github.com/ualhmis/
        assertThat(driver.findElement(By.cssSelector(".timeline-inverted:nth-child(2) a")).getText(),
                is("https://github.com/ualhmis/"));
        // 10 | assertText | xpath=//section[@id='about']/div/ul/li[2]/div[2]/div[2]/p/a
        // | https://github.com/ualhmis/
        assertThat(driver.findElement(By.xpath("//section[@id=\'about\']/div/ul/li[2]/div[2]/div[2]/p/a")).getText(),
                is("https://github.com/ualhmis/"));
        // 11 | assertText | css=.timeline-inverted:nth-child(4) a |
        // https://portal.azure.com/#home
        assertThat(driver.findElement(By.cssSelector(".timeline-inverted:nth-child(4) a")).getText(),
                is("https://portal.azure.com/#home"));
        // 12 | click | css=.nav-item:nth-child(3) > .nav-link |
        driver.findElement(By.cssSelector(".nav-item:nth-child(3) > .nav-link")).click();
        // 13 | assertText | css=#team .section-heading | MIEMBROS DEL EQUIPO
        assertThat(driver.findElement(By.cssSelector("#team .section-heading")).getText(), is("MIEMBROS DEL EQUIPO"));
        // 14 | assertText | css=.col-lg-6:nth-child(1) h4 | Juan Diego Ortega
        assertThat(driver.findElement(By.cssSelector(".col-lg-6:nth-child(1) h4")).getText(), is("Juan Diego Ortega"));
        // 15 | storeAttribute | xpath=//*[@id="team"]/div/div[2]/div[1]/div/a[2]@href |
        // github
        {
            WebElement element = driver.findElement(By.xpath("//*[@id=\"team\"]/div/div[2]/div[1]/div/a[2]"));
            String attribute = element.getAttribute("href");
            vars.put("github", attribute);
        }
        // 16 | assert | github | https://github.com/joa102/
        assertEquals(vars.get("github").toString(), "https://github.com/joa102/");
        // 17 | assertText | css=.col-lg-6:nth-child(2) h4 | Ruben Ortega
        assertThat(driver.findElement(By.cssSelector(".col-lg-6:nth-child(2) h4")).getText(), is("Ruben Ortega"));
        // 18 | storeAttribute | xpath=//*[@id="team"]/div/div[2]/div[2]/div/a[2]@href |
        // github
        {
            WebElement element = driver.findElement(By.xpath("//*[@id=\"team\"]/div/div[2]/div[2]/div/a[2]"));
            String attribute = element.getAttribute("href");
            vars.put("github", attribute);
        }
        // 19 | assert | github | https://github.com/roe963
        assertEquals(vars.get("github").toString(), "https://github.com/roe963");
        // 20 | close | |
        driver.close();
    }

    @SuppressWarnings("deprecation")
    @Test
    public void testRubenspage() {
        // Test name: test Ruben's page
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("http://ortega2web.eastus.cloudapp.azure.com/");
        // 2 | pause | 1000 |
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        // 3 | click | css=.nav-item:nth-child(3) > .nav-link |
        driver.findElement(By.cssSelector(".nav-item:nth-child(3) > .nav-link")).click();
        // 4 | click | css=.col-lg-6:nth-child(2) .mx-auto |
        driver.findElement(By.cssSelector(".col-lg-6:nth-child(2) .mx-auto")).click();
        // 5 | click | css=.masthead-heading |
        driver.findElement(By.cssSelector(".masthead-heading")).click();
        // 6 | assertText | css=.masthead-heading | RUBEN ORTEGA
        assertThat(driver.findElement(By.cssSelector(".masthead-heading")).getText(), is("RUBEN ORTEGA"));
        // 7 | assertElementPresent | css=.mx-auto |
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".mx-auto"));
            assert (elements.size() > 0);
        }
        // 8 | click | css=.section-heading |
        driver.findElement(By.cssSelector(".section-heading")).click();
        // 9 | storeAttribute | xpath=//*[@id="page-top"]/header/div/a@href | github
        {
            WebElement element = driver.findElement(By.xpath("//*[@id=\"page-top\"]/header/div/a"));
            String attribute = element.getAttribute("href");
            vars.put("github", attribute);
        }
        // 10 | assert | github | https://github.com/roe963
        assertEquals(vars.get("github").toString(), "https://github.com/roe963");
        // 11 | click | css=.nav-item:nth-child(2) > .nav-link |
        driver.findElement(By.cssSelector(".nav-item:nth-child(2) > .nav-link")).click();
        // 12 | assertText | css=.section-heading | MIS AFICIONES
        assertThat(driver.findElement(By.cssSelector(".section-heading")).getText(), is("MIS AFICIONES"));
        // 13 | assertElementPresent | css=.col-md-4:nth-child(2) |
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".col-md-4:nth-child(2)"));
            assert (elements.size() > 0);
        }
        // 14 | click | css=.navbar-brand > img |
        driver.findElement(By.cssSelector(".navbar-brand > img")).click();
        // 15 | close | |
        driver.close();
    }

    @SuppressWarnings("deprecation")
    @Test
    public void testJuandispage() {
        // Test name: test Juandi's page
        // Step # | name | target | value
        // 1 | open | / |
        driver.get("http://ortega2web.eastus.cloudapp.azure.com/");
        // 2 | pause | 1000 |
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        // 3 | click | css=.nav-item:nth-child(3) > .nav-link |
        driver.findElement(By.cssSelector(".nav-item:nth-child(3) > .nav-link")).click();
        // 4 | click | css=.col-lg-6:nth-child(1) .mx-auto |
        driver.findElement(By.cssSelector(".col-lg-6:nth-child(1) .mx-auto")).click();
        // 5 | click | css=.masthead-heading |
        driver.findElement(By.cssSelector(".masthead-heading")).click();
        // 6 | assertText | css=.masthead-heading | JUAN DIEGO ORTEGA
        assertThat(driver.findElement(By.cssSelector(".masthead-heading")).getText(), is("JUAN DIEGO ORTEGA"));
        // 7 | assertElementPresent | css=.mx-auto |
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".mx-auto"));
            assert (elements.size() > 0);
        }
        // 8 | click | css=.section-heading |
        driver.findElement(By.cssSelector(".section-heading")).click();
        // 9 | storeAttribute | xpath=//*[@id="page-top"]/header/div/a@href | github
        {
            WebElement element = driver.findElement(By.xpath("//*[@id=\"page-top\"]/header/div/a"));
            String attribute = element.getAttribute("href");
            vars.put("github", attribute);
        }
        // 10 | assert | github | https://github.com/joa102/
        assertEquals(vars.get("github").toString(), "https://github.com/joa102/");
        // 11 | click | css=.nav-item:nth-child(2) > .nav-link |
        driver.findElement(By.cssSelector(".nav-item:nth-child(2) > .nav-link")).click();
        // 12 | assertText | css=.section-heading | MIS AFICIONES
        assertThat(driver.findElement(By.cssSelector(".section-heading")).getText(), is("MIS AFICIONES"));
        // 13 | assertElementPresent | css=.col-md-4:nth-child(2) |
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".col-md-4:nth-child(2)"));
            assert (elements.size() > 0);
        }
        // 14 | click | css=.navbar-brand > img |
        driver.findElement(By.cssSelector(".navbar-brand > img")).click();
        // 15 | close | |
        driver.close();
    }
}
